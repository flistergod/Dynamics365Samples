var pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./canvasdnd/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./canvasdnd/DatasetStateManager.ts":
/*!******************************************!*\
  !*** ./canvasdnd/DatasetStateManager.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DatasetStateManager = void 0;\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nvar DatasetStateManager =\n/** @class */\nfunction () {\n  function DatasetStateManager() {\n    this.currentPage = 1;\n    this.pageSize = 0;\n    this.pendingData = false;\n    this.previousRecords = {};\n    this.isCanvas = false;\n    this.isCanvas = window && !window.hasOwnProperty(\"Xrm\");\n  }\n\n  DatasetStateManager.prototype.reset = function () {\n    var _a;\n\n    this.currentPage = 1;\n    (_a = this.dataset) === null || _a === void 0 ? void 0 : _a.paging.reset();\n  };\n\n  DatasetStateManager.prototype.refresh = function () {\n    var _a;\n\n    this.currentPage = 1;\n    (_a = this.dataset) === null || _a === void 0 ? void 0 : _a.refresh();\n    this.pendingData = true;\n  };\n\n  DatasetStateManager.prototype.getTotalRecords = function () {\n    var _a;\n\n    return (_a = this.dataset) === null || _a === void 0 ? void 0 : _a.paging.totalResultCount;\n  };\n\n  DatasetStateManager.prototype.getPageNumber = function () {\n    return this.currentPage;\n  };\n\n  DatasetStateManager.prototype.getPageSize = function () {\n    return this.pageSize;\n  };\n\n  DatasetStateManager.prototype.getTotalPages = function () {\n    var totalRecords = this.getTotalRecords();\n    return totalRecords ? Math.ceil(totalRecords / this.pageSize) : 1;\n  };\n\n  DatasetStateManager.prototype.hasNextPage = function () {\n    if (this.dataset) {\n      return this.dataset.paging.hasNextPage;\n    } else {\n      return false;\n    }\n  };\n\n  DatasetStateManager.prototype.hasPreviousPage = function () {\n    if (this.dataset) {\n      return this.dataset.paging.hasPreviousPage;\n    } else {\n      return false;\n    }\n  };\n\n  DatasetStateManager.prototype.setPage = function (pageNumber) {\n    if (this.pendingData) return;\n\n    if (pageNumber > 0 && pageNumber <= this.getTotalPages()) {\n      this.currentPage = pageNumber;\n\n      if (this.dataset) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.loadPage(pageNumber);\n      }\n    }\n  };\n\n  DatasetStateManager.prototype.nextPage = function () {\n    if (this.pendingData) return false;\n\n    if (this.hasNextPage()) {\n      this.currentPage++;\n      this.loadPage(this.currentPage);\n    }\n\n    return true;\n  };\n\n  DatasetStateManager.prototype.nextPageIncremental = function () {\n    var _a;\n\n    if (this.pendingData) return false;\n\n    if (this.hasNextPage()) {\n      this.currentPage++;\n      (_a = this.dataset) === null || _a === void 0 ? void 0 : _a.paging.loadNextPage();\n    }\n\n    return true;\n  };\n\n  DatasetStateManager.prototype.loadPage = function (index) {\n    var _a;\n\n    if (this.pendingData) return false;\n    this.pendingData = true;\n    this.currentPage = index; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    var pagingAny = (_a = this.dataset) === null || _a === void 0 ? void 0 : _a.paging;\n    pagingAny.loadExactPage(index);\n    return true;\n  };\n\n  DatasetStateManager.prototype.previousPage = function () {\n    if (this.pendingData) return false;\n\n    if (this.hasPreviousPage()) {\n      this.currentPage--;\n      this.loadPage(this.currentPage);\n    }\n\n    return true;\n  };\n\n  DatasetStateManager.prototype.setPageSize = function (pageSize) {\n    var _a;\n\n    this.pageSize = pageSize;\n    (_a = this.dataset) === null || _a === void 0 ? void 0 : _a.paging.setPageSize(pageSize);\n    this.loadPage(1);\n  };\n\n  DatasetStateManager.prototype.appySort = function (sort, refresh) {\n    var _a;\n\n    if (this.pendingData) {\n      console.log(\"PCF: Sort pending data\");\n      return false;\n    }\n\n    if (!this.dataset) throw new Error(\"dataset is not loaded\");\n\n    while (this.dataset.sorting.length > 0) {\n      this.dataset.sorting.pop();\n    }\n\n    (_a = this.dataset.sorting).push.apply(_a, sort);\n\n    if (refresh) {\n      this.refresh();\n    }\n\n    return true;\n  };\n\n  DatasetStateManager.prototype.setData = function (dataset) {\n    this.pendingData = false;\n    this.dataset = dataset;\n    var changed = false; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    this.pageSize = dataset.paging.pageSize;\n\n    if (this.currentPage > 1 && !dataset.paging.hasPreviousPage) {\n      this.currentPage = 1;\n      changed = true;\n    } else if (this.currentPage == 1 && dataset.paging.hasPreviousPage) {\n      // We are starting in the middle of the pages (can happen on mobile and Canvas)\n      // Move to the first page\n      this.setPage(1);\n      changed = true;\n    } else {\n      // Check the rows of the dataset to see if it's changed\n      if (!this.previousSortedIds) {\n        changed = true;\n      } else if (dataset.sortedRecordIds.length != this.previousSortedIds.length) {\n        changed = true;\n      } else if (Object.keys(dataset.records).length != Object.keys(this.previousRecords).length) {\n        changed = true;\n\n        if (!changed) {\n          // Check if the sorted records have changed\n          for (var i = 0; i <= dataset.sortedRecordIds.length; i++) {\n            if (dataset.sortedRecordIds[i] != this.previousSortedIds[i]) {\n              changed = true;\n              break;\n            }\n          }\n        }\n\n        if (!changed && this.isCanvas) {\n          // Check if the actual records have changed using the comparison column\n          // We have to do this for Canvas Apps where it might be bound to a collection that doesn't have unique Ids\n          for (var key in this.previousRecords) {\n            var newRecord = dataset.records[key];\n            var previouRecord = this.previousRecords[key];\n\n            if (!newRecord || previouRecord != newRecord) {\n              changed = true;\n              console.debug(\"Dnd: Dataset Changed on compare\");\n              break;\n            }\n          }\n        }\n      }\n\n      if (changed) {\n        this.previousRecords = {};\n        Object.assign(this.previousRecords, dataset.records);\n        this.previousSortedIds = __spreadArray([], dataset.sortedRecordIds, true); // Clone the sortedRecordIds for comparisons\n      }\n    }\n\n    var dataHasChanged = {\n      dataHasChanged: changed\n    };\n    return dataHasChanged;\n  };\n\n  return DatasetStateManager;\n}();\n\nexports.DatasetStateManager = DatasetStateManager;\n\n//# sourceURL=webpack://pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad/./canvasdnd/DatasetStateManager.ts?");

/***/ }),

/***/ "./canvasdnd/PropertyBagState.ts":
/*!***************************************!*\
  !*** ./canvasdnd/PropertyBagState.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PCFPropertyBagStateManager = void 0; // ParameterState keeps tabs on which values have actually changed\n// Canvas App PCF controls don't get notified of which parameters have chaned\n// Model Driven Apps get passed all parameters on save even if they haven't changed\n\nvar PCFPropertyBagStateManager =\n/** @class */\nfunction () {\n  function PCFPropertyBagStateManager(convertToLocalDate, emmitDebug) {\n    this.emmitDebug = false;\n    this.isCanvas = false;\n    this.updatedValues = {};\n    this.currentValues = {};\n    this.convertToLocalDate = convertToLocalDate;\n    this.emmitDebug = emmitDebug !== null && emmitDebug !== void 0 ? emmitDebug : false;\n    this.isCanvas = window && !window.hasOwnProperty(\"Xrm\");\n  }\n\n  PCFPropertyBagStateManager.prototype.debug = function (message) {\n    if (this.emmitDebug) {\n      console.debug(message);\n    }\n  };\n\n  PCFPropertyBagStateManager.prototype.setAllProperties = function (properties) {\n    // Set the values\n    this.currentValues = {};\n    this.getInboundChangedProperties(properties, Object.keys(properties));\n  };\n\n  PCFPropertyBagStateManager.prototype.updateProperties = function (parameters) {\n    var _a, _b; // Merge the changed values with the existing pending changes\n\n\n    var paramRecord = parameters; // Work out which parameters have changed\n\n    for (var property in paramRecord) {\n      var newValue = paramRecord[property];\n      var oldValue = this.currentValues[property];\n\n      if (newValue instanceof Date) {\n        newValue = (_a = newValue) === null || _a === void 0 ? void 0 : _a.toISOString();\n        oldValue = (_b = oldValue) === null || _b === void 0 ? void 0 : _b.toISOString();\n      }\n\n      if (newValue != oldValue) {\n        this.debug(\"PCF:OUT \".concat(property, \"=\").concat(newValue, \" (new)\\nPCF:OUT \").concat(property, \"=\").concat(oldValue, \" (old)\"));\n        this.updatedValues[property] = paramRecord[property];\n        this.currentValues[property] = paramRecord[property];\n      }\n    }\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  PCFPropertyBagStateManager.prototype.getInboundChangedProperties = function (properties, updatedProperties) {\n    var _a, _b, _c;\n\n    var changedProperties = []; // If in Canvas ignore the updatedProperties since it doesn't return anything helpful\n\n    if (this.isCanvas) updatedProperties = Object.keys(properties);\n\n    for (var _i = 0, updatedProperties_1 = updatedProperties; _i < updatedProperties_1.length; _i++) {\n      var propertyName = updatedProperties_1[_i];\n      var property = properties[propertyName];\n\n      if (property && property.type != undefined) {\n        var skip = false;\n        var newValueRaw = property.raw;\n        var newValueCompare = property.raw;\n        var oldValueCompare = this.currentValues[propertyName]; // Some raw types can't be compared as objects\n\n        switch (property.type) {\n          case \"DataSet\":\n            // Canvas provides a DataSet property of any bound column\n            // since the values are actually in the records, we don't need this\n            skip = true;\n            break;\n\n          case \"\":\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (property.records) {\n              // this is a dataset property\n              skip = true;\n            } // Guid/entity id's type == \"\"\n            // The raw value is a Guid object\n\n\n            newValueCompare = property.raw && property.raw.toString(); // eslint-disable-next-line @typescript-eslint/ban-types\n\n            oldValueCompare = (_a = this.currentValues[propertyName]) === null || _a === void 0 ? void 0 : _a.toString();\n            break;\n\n          case \"DateAndTime.DateAndTime\":\n          case \"DateAndTime.DateOnly\":\n            // Adjust for the fact that we get the date values in utc - convert to local time\n            newValueRaw = this.convertToLocalDate(property);\n            newValueCompare = (_b = newValueRaw) === null || _b === void 0 ? void 0 : _b.toISOString();\n            oldValueCompare = (_c = this.currentValues[propertyName]) === null || _c === void 0 ? void 0 : _c.toISOString();\n            break;\n        }\n\n        if (!skip && newValueCompare != oldValueCompare) {\n          this.debug(\"PCF:IN \".concat(propertyName, \"=\").concat(newValueCompare, \" (new)\\nPCF:IN \").concat(propertyName, \"=\").concat(oldValueCompare, \" (old)\"));\n          changedProperties.push(propertyName);\n          this.currentValues[propertyName] = newValueRaw;\n        }\n      }\n    }\n\n    return changedProperties;\n  };\n\n  PCFPropertyBagStateManager.prototype.getOutboundChangedProperties = function () {\n    var pendingChanges = this.updatedValues;\n    this.updatedValues = {};\n    return pendingChanges;\n  };\n\n  return PCFPropertyBagStateManager;\n}();\n\nexports.PCFPropertyBagStateManager = PCFPropertyBagStateManager;\n\n//# sourceURL=webpack://pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad/./canvasdnd/PropertyBagState.ts?");

/***/ }),

/***/ "./canvasdnd/index.ts":
/*!****************************!*\
  !*** ./canvasdnd/index.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.canvasdnd = void 0;\n\nvar dragula = __webpack_require__(/*! dragula */ \"./node_modules/dragula/dragula.js\");\n\nvar DatasetStateManager_1 = __webpack_require__(/*! ./DatasetStateManager */ \"./canvasdnd/DatasetStateManager.ts\");\n\nvar PropertyBagState_1 = __webpack_require__(/*! ./PropertyBagState */ \"./canvasdnd/PropertyBagState.ts\");\n\nvar RECORD_ID_ATTRIBUTE = \"innerHTML\";\n\nvar canvasdnd =\n/** @class */\nfunction () {\n  function canvasdnd() {\n    var _this = this;\n\n    this.droppedId = \"\";\n    this.droppedTarget = \"\";\n    this.droppedSource = \"\";\n    this.droppedBeforeId = \"\";\n    this.datasetStateManager = new DatasetStateManager_1.DatasetStateManager();\n    this.propertyStateManager = new PropertyBagState_1.PCFPropertyBagStateManager(function () {\n      return null;\n    }, false);\n    this.propertiesTriggerRender = [\"DropZoneID\", \"OtherDropZoneIDs\", \"IsMasterZone\", \"ItemBackgroundColour\", \"ItemFontSize\", \"ItemFontColour\"];\n\n    this.onDrop = function (el, target, source, droppedBefore) {\n      if (_this.container) {\n        try {\n          _this.container.removeChild(el);\n        } catch (_a) {}\n      }\n\n      if (el) {\n        var itemId = el.getElementsByTagName(\"div\")[0]['textContent'];\n        var containerId = target.id;\n        _this.droppedTarget = containerId;\n        _this.droppedSource = source.id;\n        _this.droppedId = itemId;\n        _this.droppedBeforeId = droppedBefore ? droppedBefore.getAttribute(RECORD_ID_ATTRIBUTE) : \"\";\n\n        _this.notifyOutputChanged();\n      }\n    };\n  }\n  /**\r\n   * Used to initialize the control instance. Controls can kick off remote server calls and other initialization actions here.\r\n   * Data-set values are not initialized here, use updateView.\r\n   * @param context The entire property bag available to control via Context Object; It contains values as set up by the customizer mapped to property names defined in the manifest, as well as utility functions.\r\n   * @param notifyOutputChanged A callback method to alert the framework that the control has new outputs ready to be retrieved asynchronously.\r\n   * @param state A piece of data that persists in one session for a single user. Can be set at any point in a controls life cycle by calling 'setControlState' in the Mode interface.\r\n   * @param container If a control is marked control-type='standard', it will receive an empty div element within which it can render its content.\r\n   */\n\n\n  canvasdnd.prototype.init = function (context, notifyOutputChanged, _state, container) {\n    this.container = container;\n    this.drake = dragula();\n    this.drake.on(\"drop\", this.onDrop); // Need to track container resize so that control could get the available width.\n    // In Canvas-app, the available height will be provided in context.mode.allocatedHeight\n\n    context.mode.trackContainerResize(true);\n    this.notifyOutputChanged = notifyOutputChanged;\n    context.parameters.items.paging.setPageSize(10000); // Create main table container div.\n\n    this.mainContainer = document.createElement(\"div\");\n    this.mainContainer.classList.add(\"canvasdnd-main-container\");\n    container.appendChild(this.mainContainer);\n  };\n  /**\r\n   * Called when any value in the property bag has changed. This includes field values, data-sets, global values such as container height and width, offline status, control metadata values such as label, visible, etc.\r\n   * @param context The entire property bag available to control via Context Object; It contains values as set up by the customizer mapped to names defined in the manifest, as well as utility functions\r\n   */\n\n\n  canvasdnd.prototype.updateView = function (context) {\n    var _this = this;\n\n    var _a; // Determine what has changed\n\n\n    var datasetChanged = this.datasetStateManager.setData(context.parameters.items);\n    var propertiesChanged = this.propertyStateManager.getInboundChangedProperties( // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    context.parameters, context.updatedProperties); // If nothing has changed, then exit\n\n    if (propertiesChanged.length == 0 && !datasetChanged.dataHasChanged) {\n      return;\n    }\n\n    console.debug(\"DnD: updateView \".concat(context.parameters.DropZoneID.raw), datasetChanged, propertiesChanged);\n    this.contextObj = context; // If we don't have a drop zone or the id has changed\n\n    if (!this.listContainer || propertiesChanged.indexOf(\"DropZoneID\") > -1) {\n      if (this.listContainer) {\n        // Remove old list container\n        this.mainContainer.removeChild(this.listContainer);\n      }\n\n      this.previousDropZoneId = this.contextObj.parameters.DropZoneID.raw;\n      this.listContainer = document.createElement(\"ul\");\n      this.listContainer.id = this.contextObj.parameters.DropZoneID.raw;\n      this.listContainer.classList.add(\"canvasdnd-list\");\n      this.mainContainer.appendChild(this.listContainer);\n    } // Set height\n\n\n    this.listContainer.style.height = context.mode.allocatedHeight + \"px\";\n    var updateItems = datasetChanged.dataHasChanged || propertiesChanged.filter(function (value) {\n      return _this.propertiesTriggerRender.includes(value);\n    });\n\n    if (!context.parameters.items.loading && updateItems) {\n      // Get sorted columns on collection provided as the dataset\n      var fieldsOnDataset = this.getSortedFieldsOnDataset(context);\n\n      if (!fieldsOnDataset || fieldsOnDataset.length === 0) {\n        return;\n      } // Remove existing items\n      //console.debug(\"DnD: Remove previous items\");\n\n\n      while (this.listContainer.firstChild && this.listContainer.firstChild.parentNode) {\n        this.listContainer.firstChild.parentNode.removeChild(this.listContainer.firstChild);\n      }\n\n      this.addItemDOMElements(fieldsOnDataset, context.parameters.items);\n    }\n\n    if (context.parameters.IsMasterZone.raw && context.parameters.OtherDropZoneIDs.raw) {\n      // Get the other containers - we need to do this each update as the other drop zones may not have been build the last time\n      var containers = (_a = context.parameters.OtherDropZoneIDs.raw) === null || _a === void 0 ? void 0 : _a.split(\",\");\n      var containerElements = [this.listContainer]; // Since the other containers may not be created yet, we setup drake after a timeout\n      // To the app time to create the containers\n\n      this.scheduleHooks(containers, containerElements);\n    }\n  };\n\n  canvasdnd.prototype.scheduleHooks = function (containers, containerElements) {\n    var _this = this;\n\n    var hooksAdded = this.addDrakeHooks(containers, containerElements);\n\n    if (!hooksAdded) {\n      setTimeout(function () {\n        _this.scheduleHooks(containers, containerElements);\n      }, 1000);\n    }\n  };\n\n  canvasdnd.prototype.addDrakeHooks = function (containers, containerElements) {\n    for (var _i = 0, containers_1 = containers; _i < containers_1.length; _i++) {\n      var container = containers_1[_i];\n      var containerElement = document.getElementById(container.trim()); // Is the drop zone found?\n\n      if (!containerElement) return false;\n      containerElements.push(containerElement);\n    }\n\n    this.drake.containers = containerElements;\n    console.debug(\"DnD: Drag hooks added\", containerElements);\n    return true;\n  };\n  /**\r\n   * It is called by the framework prior to a control receiving new data.\r\n   * @returns an object based on nomenclature defined in manifest, expecting object[s] for property marked as â€œboundâ€ or â€œoutputâ€\r\n   */\n\n\n  canvasdnd.prototype.getOutputs = function () {\n    return {\n      DroppedId: this.droppedId,\n      DroppedTarget: this.droppedTarget,\n      DroppedSource: this.droppedSource,\n      DroppedBeforeId: this.droppedBeforeId\n    };\n  };\n  /**\r\n   * Called when the control is to be removed from the DOM tree. Controls should use this call for cleanup.\r\n   * i.e. cancelling any pending remote calls, removing listeners, etc.\r\n   */\n\n\n  canvasdnd.prototype.destroy = function () {\n    this.drake.destroy();\n  };\n  /**\r\n   * Get sorted columns on view, columns are sorted by DataSetInterfaces.Column.order\r\n   * Property-set columns will always have order = -1.\r\n   * In Model-driven app, the columns are ordered in the same way as columns defined in views.\r\n   * In Canvas-app, the columns are ordered by the sequence fields added to control\r\n   * Note that property set columns will have order = 0 in test harness, this is a bug.\r\n   * @param context\r\n   * @return sorted columns object on View\r\n   */\n\n\n  canvasdnd.prototype.getSortedFieldsOnDataset = function (context) {\n    if (!context.parameters.items.columns) {\n      return [];\n    }\n\n    var columns = context.parameters.items.columns;\n    return columns;\n  };\n\n  canvasdnd.prototype.addItemDOMElements = function (fieldsOnDataset, dataset) {\n    if (dataset.sortedRecordIds.length > 0) {\n      var _loop_1 = function _loop_1(currentRecordId) {\n        var itemRow = document.createElement(\"li\");\n        itemRow.classList.add(\"canvasdnd-item\"); // Style accordingly\n\n        if (this_1.contextObj.parameters.ItemBackgroundColour.raw) {\n          itemRow.style.backgroundColor = this_1.contextObj.parameters.ItemBackgroundColour.raw;\n        }\n\n        if (this_1.contextObj.parameters.ItemFontSize.raw) {\n          itemRow.style.fontSize = this_1.contextObj.parameters.ItemFontSize.raw + \"px\";\n        }\n\n        if (this_1.contextObj.parameters.ItemFontColour.raw) {\n          itemRow.style.color = this_1.contextObj.parameters.ItemFontColour.raw;\n        } // Set the index of the item in the source dataset - this is used when we drop an item\n\n\n        itemRow.setAttribute(RECORD_ID_ATTRIBUTE, dataset.records[currentRecordId].getRecordId());\n        fieldsOnDataset.forEach(function (columnItem) {\n          var innerDiv = document.createElement(\"div\");\n          innerDiv.classList.add(\"canvasdnd-item-value\");\n          innerDiv.innerText = dataset.records[currentRecordId].getFormattedValue(columnItem.name);\n          itemRow.appendChild(innerDiv);\n        });\n        this_1.listContainer.appendChild(itemRow);\n      };\n\n      var this_1 = this;\n\n      for (var _i = 0, _a = dataset.sortedRecordIds; _i < _a.length; _i++) {\n        var currentRecordId = _a[_i];\n\n        _loop_1(currentRecordId);\n      }\n    }\n  };\n\n  return canvasdnd;\n}();\n\nexports.canvasdnd = canvasdnd;\n\n//# sourceURL=webpack://pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad/./canvasdnd/index.ts?");

/***/ }),

/***/ "./node_modules/atoa/atoa.js":
/*!***********************************!*\
  !*** ./node_modules/atoa/atoa.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function atoa(a, n) {\n  return Array.prototype.slice.call(a, n);\n};\n\n//# sourceURL=webpack://pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad/./node_modules/atoa/atoa.js?");

/***/ }),

/***/ "./node_modules/contra/debounce.js":
/*!*****************************************!*\
  !*** ./node_modules/contra/debounce.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar ticky = __webpack_require__(/*! ticky */ \"./node_modules/ticky/ticky-browser.js\");\n\nmodule.exports = function debounce(fn, args, ctx) {\n  if (!fn) {\n    return;\n  }\n\n  ticky(function run() {\n    fn.apply(ctx || null, args || []);\n  });\n};\n\n//# sourceURL=webpack://pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad/./node_modules/contra/debounce.js?");

/***/ }),

/***/ "./node_modules/contra/emitter.js":
/*!****************************************!*\
  !*** ./node_modules/contra/emitter.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar atoa = __webpack_require__(/*! atoa */ \"./node_modules/atoa/atoa.js\");\n\nvar debounce = __webpack_require__(/*! ./debounce */ \"./node_modules/contra/debounce.js\");\n\nmodule.exports = function emitter(thing, options) {\n  var opts = options || {};\n  var evt = {};\n\n  if (thing === undefined) {\n    thing = {};\n  }\n\n  thing.on = function (type, fn) {\n    if (!evt[type]) {\n      evt[type] = [fn];\n    } else {\n      evt[type].push(fn);\n    }\n\n    return thing;\n  };\n\n  thing.once = function (type, fn) {\n    fn._once = true; // thing.off(fn) still works!\n\n    thing.on(type, fn);\n    return thing;\n  };\n\n  thing.off = function (type, fn) {\n    var c = arguments.length;\n\n    if (c === 1) {\n      delete evt[type];\n    } else if (c === 0) {\n      evt = {};\n    } else {\n      var et = evt[type];\n\n      if (!et) {\n        return thing;\n      }\n\n      et.splice(et.indexOf(fn), 1);\n    }\n\n    return thing;\n  };\n\n  thing.emit = function () {\n    var args = atoa(arguments);\n    return thing.emitterSnapshot(args.shift()).apply(this, args);\n  };\n\n  thing.emitterSnapshot = function (type) {\n    var et = (evt[type] || []).slice(0);\n    return function () {\n      var args = atoa(arguments);\n      var ctx = this || thing;\n\n      if (type === 'error' && opts.throws !== false && !et.length) {\n        throw args.length === 1 ? args[0] : args;\n      }\n\n      et.forEach(function emitter(listen) {\n        if (opts.async) {\n          debounce(listen, args, ctx);\n        } else {\n          listen.apply(ctx, args);\n        }\n\n        if (listen._once) {\n          thing.off(type, listen);\n        }\n      });\n      return thing;\n    };\n  };\n\n  return thing;\n};\n\n//# sourceURL=webpack://pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad/./node_modules/contra/emitter.js?");

/***/ }),

/***/ "./node_modules/crossvent/src/crossvent.js":
/*!*************************************************!*\
  !*** ./node_modules/crossvent/src/crossvent.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar customEvent = __webpack_require__(/*! custom-event */ \"./node_modules/custom-event/index.js\");\n\nvar eventmap = __webpack_require__(/*! ./eventmap */ \"./node_modules/crossvent/src/eventmap.js\");\n\nvar doc = global.document;\nvar addEvent = addEventEasy;\nvar removeEvent = removeEventEasy;\nvar hardCache = [];\n\nif (!global.addEventListener) {\n  addEvent = addEventHard;\n  removeEvent = removeEventHard;\n}\n\nmodule.exports = {\n  add: addEvent,\n  remove: removeEvent,\n  fabricate: fabricateEvent\n};\n\nfunction addEventEasy(el, type, fn, capturing) {\n  return el.addEventListener(type, fn, capturing);\n}\n\nfunction addEventHard(el, type, fn) {\n  return el.attachEvent('on' + type, wrap(el, type, fn));\n}\n\nfunction removeEventEasy(el, type, fn, capturing) {\n  return el.removeEventListener(type, fn, capturing);\n}\n\nfunction removeEventHard(el, type, fn) {\n  var listener = unwrap(el, type, fn);\n\n  if (listener) {\n    return el.detachEvent('on' + type, listener);\n  }\n}\n\nfunction fabricateEvent(el, type, model) {\n  var e = eventmap.indexOf(type) === -1 ? makeCustomEvent() : makeClassicEvent();\n\n  if (el.dispatchEvent) {\n    el.dispatchEvent(e);\n  } else {\n    el.fireEvent('on' + type, e);\n  }\n\n  function makeClassicEvent() {\n    var e;\n\n    if (doc.createEvent) {\n      e = doc.createEvent('Event');\n      e.initEvent(type, true, true);\n    } else if (doc.createEventObject) {\n      e = doc.createEventObject();\n    }\n\n    return e;\n  }\n\n  function makeCustomEvent() {\n    return new customEvent(type, {\n      detail: model\n    });\n  }\n}\n\nfunction wrapperFactory(el, type, fn) {\n  return function wrapper(originalEvent) {\n    var e = originalEvent || global.event;\n    e.target = e.target || e.srcElement;\n\n    e.preventDefault = e.preventDefault || function preventDefault() {\n      e.returnValue = false;\n    };\n\n    e.stopPropagation = e.stopPropagation || function stopPropagation() {\n      e.cancelBubble = true;\n    };\n\n    e.which = e.which || e.keyCode;\n    fn.call(el, e);\n  };\n}\n\nfunction wrap(el, type, fn) {\n  var wrapper = unwrap(el, type, fn) || wrapperFactory(el, type, fn);\n  hardCache.push({\n    wrapper: wrapper,\n    element: el,\n    type: type,\n    fn: fn\n  });\n  return wrapper;\n}\n\nfunction unwrap(el, type, fn) {\n  var i = find(el, type, fn);\n\n  if (i) {\n    var wrapper = hardCache[i].wrapper;\n    hardCache.splice(i, 1); // free up a tad of memory\n\n    return wrapper;\n  }\n}\n\nfunction find(el, type, fn) {\n  var i, item;\n\n  for (i = 0; i < hardCache.length; i++) {\n    item = hardCache[i];\n\n    if (item.element === el && item.type === type && item.fn === fn) {\n      return i;\n    }\n  }\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad/./node_modules/crossvent/src/crossvent.js?");

/***/ }),

/***/ "./node_modules/crossvent/src/eventmap.js":
/*!************************************************!*\
  !*** ./node_modules/crossvent/src/eventmap.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar eventmap = [];\nvar eventname = '';\nvar ron = /^on/;\n\nfor (eventname in global) {\n  if (ron.test(eventname)) {\n    eventmap.push(eventname.slice(2));\n  }\n}\n\nmodule.exports = eventmap;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad/./node_modules/crossvent/src/eventmap.js?");

/***/ }),

/***/ "./node_modules/custom-event/index.js":
/*!********************************************!*\
  !*** ./node_modules/custom-event/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var NativeCustomEvent = global.CustomEvent;\n\nfunction useNative() {\n  try {\n    var p = new NativeCustomEvent('cat', {\n      detail: {\n        foo: 'bar'\n      }\n    });\n    return 'cat' === p.type && 'bar' === p.detail.foo;\n  } catch (e) {}\n\n  return false;\n}\n/**\n * Cross-browser `CustomEvent` constructor.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent\n *\n * @public\n */\n\n\nmodule.exports = useNative() ? NativeCustomEvent : // IE >= 9\n'undefined' !== typeof document && 'function' === typeof document.createEvent ? function CustomEvent(type, params) {\n  var e = document.createEvent('CustomEvent');\n\n  if (params) {\n    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);\n  } else {\n    e.initCustomEvent(type, false, false, void 0);\n  }\n\n  return e;\n} : // IE <= 8\nfunction CustomEvent(type, params) {\n  var e = document.createEventObject();\n  e.type = type;\n\n  if (params) {\n    e.bubbles = Boolean(params.bubbles);\n    e.cancelable = Boolean(params.cancelable);\n    e.detail = params.detail;\n  } else {\n    e.bubbles = false;\n    e.cancelable = false;\n    e.detail = void 0;\n  }\n\n  return e;\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad/./node_modules/custom-event/index.js?");

/***/ }),

/***/ "./node_modules/dragula/classes.js":
/*!*****************************************!*\
  !*** ./node_modules/dragula/classes.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar cache = {};\nvar start = '(?:^|\\\\s)';\nvar end = '(?:\\\\s|$)';\n\nfunction lookupClass(className) {\n  var cached = cache[className];\n\n  if (cached) {\n    cached.lastIndex = 0;\n  } else {\n    cache[className] = cached = new RegExp(start + className + end, 'g');\n  }\n\n  return cached;\n}\n\nfunction addClass(el, className) {\n  var current = el.className;\n\n  if (!current.length) {\n    el.className = className;\n  } else if (!lookupClass(className).test(current)) {\n    el.className += ' ' + className;\n  }\n}\n\nfunction rmClass(el, className) {\n  el.className = el.className.replace(lookupClass(className), ' ').trim();\n}\n\nmodule.exports = {\n  add: addClass,\n  rm: rmClass\n};\n\n//# sourceURL=webpack://pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad/./node_modules/dragula/classes.js?");

/***/ }),

/***/ "./node_modules/dragula/dragula.js":
/*!*****************************************!*\
  !*** ./node_modules/dragula/dragula.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar emitter = __webpack_require__(/*! contra/emitter */ \"./node_modules/contra/emitter.js\");\n\nvar crossvent = __webpack_require__(/*! crossvent */ \"./node_modules/crossvent/src/crossvent.js\");\n\nvar classes = __webpack_require__(/*! ./classes */ \"./node_modules/dragula/classes.js\");\n\nvar doc = document;\nvar documentElement = doc.documentElement;\n\nfunction dragula(initialContainers, options) {\n  var len = arguments.length;\n\n  if (len === 1 && Array.isArray(initialContainers) === false) {\n    options = initialContainers;\n    initialContainers = [];\n  }\n\n  var _mirror; // mirror image\n\n\n  var _source; // source container\n\n\n  var _item; // item being dragged\n\n\n  var _offsetX; // reference x\n\n\n  var _offsetY; // reference y\n\n\n  var _moveX; // reference move x\n\n\n  var _moveY; // reference move y\n\n\n  var _initialSibling; // reference sibling when grabbed\n\n\n  var _currentSibling; // reference sibling now\n\n\n  var _copy; // item used for copying\n\n\n  var _renderTimer; // timer for setTimeout renderMirrorImage\n\n\n  var _lastDropTarget = null; // last container item was over\n\n  var _grabbed; // holds mousedown context until first mousemove\n\n\n  var o = options || {};\n\n  if (o.moves === void 0) {\n    o.moves = always;\n  }\n\n  if (o.accepts === void 0) {\n    o.accepts = always;\n  }\n\n  if (o.invalid === void 0) {\n    o.invalid = invalidTarget;\n  }\n\n  if (o.containers === void 0) {\n    o.containers = initialContainers || [];\n  }\n\n  if (o.isContainer === void 0) {\n    o.isContainer = never;\n  }\n\n  if (o.copy === void 0) {\n    o.copy = false;\n  }\n\n  if (o.copySortSource === void 0) {\n    o.copySortSource = false;\n  }\n\n  if (o.revertOnSpill === void 0) {\n    o.revertOnSpill = false;\n  }\n\n  if (o.removeOnSpill === void 0) {\n    o.removeOnSpill = false;\n  }\n\n  if (o.direction === void 0) {\n    o.direction = 'vertical';\n  }\n\n  if (o.ignoreInputTextSelection === void 0) {\n    o.ignoreInputTextSelection = true;\n  }\n\n  if (o.mirrorContainer === void 0) {\n    o.mirrorContainer = doc.body;\n  }\n\n  var drake = emitter({\n    containers: o.containers,\n    start: manualStart,\n    end: end,\n    cancel: cancel,\n    remove: remove,\n    destroy: destroy,\n    canMove: canMove,\n    dragging: false\n  });\n\n  if (o.removeOnSpill === true) {\n    drake.on('over', spillOver).on('out', spillOut);\n  }\n\n  events();\n  return drake;\n\n  function isContainer(el) {\n    return drake.containers.indexOf(el) !== -1 || o.isContainer(el);\n  }\n\n  function events(remove) {\n    var op = remove ? 'remove' : 'add';\n    touchy(documentElement, op, 'mousedown', grab);\n    touchy(documentElement, op, 'mouseup', release);\n  }\n\n  function eventualMovements(remove) {\n    var op = remove ? 'remove' : 'add';\n    touchy(documentElement, op, 'mousemove', startBecauseMouseMoved);\n  }\n\n  function movements(remove) {\n    var op = remove ? 'remove' : 'add';\n    crossvent[op](documentElement, 'selectstart', preventGrabbed); // IE8\n\n    crossvent[op](documentElement, 'click', preventGrabbed);\n  }\n\n  function destroy() {\n    events(true);\n    release({});\n  }\n\n  function preventGrabbed(e) {\n    if (_grabbed) {\n      e.preventDefault();\n    }\n  }\n\n  function grab(e) {\n    _moveX = e.clientX;\n    _moveY = e.clientY;\n    var ignore = whichMouseButton(e) !== 1 || e.metaKey || e.ctrlKey;\n\n    if (ignore) {\n      return; // we only care about honest-to-god left clicks and touch events\n    }\n\n    var item = e.target;\n    var context = canStart(item);\n\n    if (!context) {\n      return;\n    }\n\n    _grabbed = context;\n    eventualMovements();\n\n    if (e.type === 'mousedown') {\n      if (isInput(item)) {\n        // see also: https://github.com/bevacqua/dragula/issues/208\n        item.focus(); // fixes https://github.com/bevacqua/dragula/issues/176\n      } else {\n        e.preventDefault(); // fixes https://github.com/bevacqua/dragula/issues/155\n      }\n    }\n  }\n\n  function startBecauseMouseMoved(e) {\n    if (!_grabbed) {\n      return;\n    }\n\n    if (whichMouseButton(e) === 0) {\n      release({});\n      return; // when text is selected on an input and then dragged, mouseup doesn't fire. this is our only hope\n    } // truthy check fixes #239, equality fixes #207, fixes #501\n\n\n    if (e.clientX !== void 0 && Math.abs(e.clientX - _moveX) <= (o.slideFactorX || 0) && e.clientY !== void 0 && Math.abs(e.clientY - _moveY) <= (o.slideFactorY || 0)) {\n      return;\n    }\n\n    if (o.ignoreInputTextSelection) {\n      var clientX = getCoord('clientX', e) || 0;\n      var clientY = getCoord('clientY', e) || 0;\n      var elementBehindCursor = doc.elementFromPoint(clientX, clientY);\n\n      if (isInput(elementBehindCursor)) {\n        return;\n      }\n    }\n\n    var grabbed = _grabbed; // call to end() unsets _grabbed\n\n    eventualMovements(true);\n    movements();\n    end();\n    start(grabbed);\n    var offset = getOffset(_item);\n    _offsetX = getCoord('pageX', e) - offset.left;\n    _offsetY = getCoord('pageY', e) - offset.top;\n    classes.add(_copy || _item, 'gu-transit');\n    renderMirrorImage();\n    drag(e);\n  }\n\n  function canStart(item) {\n    if (drake.dragging && _mirror) {\n      return;\n    }\n\n    if (isContainer(item)) {\n      return; // don't drag container itself\n    }\n\n    var handle = item;\n\n    while (getParent(item) && isContainer(getParent(item)) === false) {\n      if (o.invalid(item, handle)) {\n        return;\n      }\n\n      item = getParent(item); // drag target should be a top element\n\n      if (!item) {\n        return;\n      }\n    }\n\n    var source = getParent(item);\n\n    if (!source) {\n      return;\n    }\n\n    if (o.invalid(item, handle)) {\n      return;\n    }\n\n    var movable = o.moves(item, source, handle, nextEl(item));\n\n    if (!movable) {\n      return;\n    }\n\n    return {\n      item: item,\n      source: source\n    };\n  }\n\n  function canMove(item) {\n    return !!canStart(item);\n  }\n\n  function manualStart(item) {\n    var context = canStart(item);\n\n    if (context) {\n      start(context);\n    }\n  }\n\n  function start(context) {\n    if (isCopy(context.item, context.source)) {\n      _copy = context.item.cloneNode(true);\n      drake.emit('cloned', _copy, context.item, 'copy');\n    }\n\n    _source = context.source;\n    _item = context.item;\n    _initialSibling = _currentSibling = nextEl(context.item);\n    drake.dragging = true;\n    drake.emit('drag', _item, _source);\n  }\n\n  function invalidTarget() {\n    return false;\n  }\n\n  function end() {\n    if (!drake.dragging) {\n      return;\n    }\n\n    var item = _copy || _item;\n    drop(item, getParent(item));\n  }\n\n  function ungrab() {\n    _grabbed = false;\n    eventualMovements(true);\n    movements(true);\n  }\n\n  function release(e) {\n    ungrab();\n\n    if (!drake.dragging) {\n      return;\n    }\n\n    var item = _copy || _item;\n    var clientX = getCoord('clientX', e) || 0;\n    var clientY = getCoord('clientY', e) || 0;\n    var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);\n    var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\n\n    if (dropTarget && (_copy && o.copySortSource || !_copy || dropTarget !== _source)) {\n      drop(item, dropTarget);\n    } else if (o.removeOnSpill) {\n      remove();\n    } else {\n      cancel();\n    }\n  }\n\n  function drop(item, target) {\n    var parent = getParent(item);\n\n    if (_copy && o.copySortSource && target === _source) {\n      parent.removeChild(_item);\n    }\n\n    if (isInitialPlacement(target)) {\n      drake.emit('cancel', item, _source, _source);\n    } else {\n      drake.emit('drop', item, target, _source, _currentSibling);\n    }\n\n    cleanup();\n  }\n\n  function remove() {\n    if (!drake.dragging) {\n      return;\n    }\n\n    var item = _copy || _item;\n    var parent = getParent(item);\n\n    if (parent) {\n      parent.removeChild(item);\n    }\n\n    drake.emit(_copy ? 'cancel' : 'remove', item, parent, _source);\n    cleanup();\n  }\n\n  function cancel(revert) {\n    if (!drake.dragging) {\n      return;\n    }\n\n    var reverts = arguments.length > 0 ? revert : o.revertOnSpill;\n    var item = _copy || _item;\n    var parent = getParent(item);\n    var initial = isInitialPlacement(parent);\n\n    if (initial === false && reverts) {\n      if (_copy) {\n        if (parent) {\n          parent.removeChild(_copy);\n        }\n      } else {\n        _source.insertBefore(item, _initialSibling);\n      }\n    }\n\n    if (initial || reverts) {\n      drake.emit('cancel', item, _source, _source);\n    } else {\n      drake.emit('drop', item, parent, _source, _currentSibling);\n    }\n\n    cleanup();\n  }\n\n  function cleanup() {\n    var item = _copy || _item;\n    ungrab();\n    removeMirrorImage();\n\n    if (item) {\n      classes.rm(item, 'gu-transit');\n    }\n\n    if (_renderTimer) {\n      clearTimeout(_renderTimer);\n    }\n\n    drake.dragging = false;\n\n    if (_lastDropTarget) {\n      drake.emit('out', item, _lastDropTarget, _source);\n    }\n\n    drake.emit('dragend', item);\n    _source = _item = _copy = _initialSibling = _currentSibling = _renderTimer = _lastDropTarget = null;\n  }\n\n  function isInitialPlacement(target, s) {\n    var sibling;\n\n    if (s !== void 0) {\n      sibling = s;\n    } else if (_mirror) {\n      sibling = _currentSibling;\n    } else {\n      sibling = nextEl(_copy || _item);\n    }\n\n    return target === _source && sibling === _initialSibling;\n  }\n\n  function findDropTarget(elementBehindCursor, clientX, clientY) {\n    var target = elementBehindCursor;\n\n    while (target && !accepted()) {\n      target = getParent(target);\n    }\n\n    return target;\n\n    function accepted() {\n      var droppable = isContainer(target);\n\n      if (droppable === false) {\n        return false;\n      }\n\n      var immediate = getImmediateChild(target, elementBehindCursor);\n      var reference = getReference(target, immediate, clientX, clientY);\n      var initial = isInitialPlacement(target, reference);\n\n      if (initial) {\n        return true; // should always be able to drop it right back where it was\n      }\n\n      return o.accepts(_item, target, _source, reference);\n    }\n  }\n\n  function drag(e) {\n    if (!_mirror) {\n      return;\n    }\n\n    e.preventDefault();\n    var clientX = getCoord('clientX', e) || 0;\n    var clientY = getCoord('clientY', e) || 0;\n    var x = clientX - _offsetX;\n    var y = clientY - _offsetY;\n    _mirror.style.left = x + 'px';\n    _mirror.style.top = y + 'px';\n    var item = _copy || _item;\n    var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);\n    var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\n    var changed = dropTarget !== null && dropTarget !== _lastDropTarget;\n\n    if (changed || dropTarget === null) {\n      out();\n      _lastDropTarget = dropTarget;\n      over();\n    }\n\n    var parent = getParent(item);\n\n    if (dropTarget === _source && _copy && !o.copySortSource) {\n      if (parent) {\n        parent.removeChild(item);\n      }\n\n      return;\n    }\n\n    var reference;\n    var immediate = getImmediateChild(dropTarget, elementBehindCursor);\n\n    if (immediate !== null) {\n      reference = getReference(dropTarget, immediate, clientX, clientY);\n    } else if (o.revertOnSpill === true && !_copy) {\n      reference = _initialSibling;\n      dropTarget = _source;\n    } else {\n      if (_copy && parent) {\n        parent.removeChild(item);\n      }\n\n      return;\n    }\n\n    if (reference === null && changed || reference !== item && reference !== nextEl(item)) {\n      _currentSibling = reference;\n      dropTarget.insertBefore(item, reference);\n      drake.emit('shadow', item, dropTarget, _source);\n    }\n\n    function moved(type) {\n      drake.emit(type, item, _lastDropTarget, _source);\n    }\n\n    function over() {\n      if (changed) {\n        moved('over');\n      }\n    }\n\n    function out() {\n      if (_lastDropTarget) {\n        moved('out');\n      }\n    }\n  }\n\n  function spillOver(el) {\n    classes.rm(el, 'gu-hide');\n  }\n\n  function spillOut(el) {\n    if (drake.dragging) {\n      classes.add(el, 'gu-hide');\n    }\n  }\n\n  function renderMirrorImage() {\n    if (_mirror) {\n      return;\n    }\n\n    var rect = _item.getBoundingClientRect();\n\n    _mirror = _item.cloneNode(true);\n    _mirror.style.width = getRectWidth(rect) + 'px';\n    _mirror.style.height = getRectHeight(rect) + 'px';\n    classes.rm(_mirror, 'gu-transit');\n    classes.add(_mirror, 'gu-mirror');\n    o.mirrorContainer.appendChild(_mirror);\n    touchy(documentElement, 'add', 'mousemove', drag);\n    classes.add(o.mirrorContainer, 'gu-unselectable');\n    drake.emit('cloned', _mirror, _item, 'mirror');\n  }\n\n  function removeMirrorImage() {\n    if (_mirror) {\n      classes.rm(o.mirrorContainer, 'gu-unselectable');\n      touchy(documentElement, 'remove', 'mousemove', drag);\n      getParent(_mirror).removeChild(_mirror);\n      _mirror = null;\n    }\n  }\n\n  function getImmediateChild(dropTarget, target) {\n    var immediate = target;\n\n    while (immediate !== dropTarget && getParent(immediate) !== dropTarget) {\n      immediate = getParent(immediate);\n    }\n\n    if (immediate === documentElement) {\n      return null;\n    }\n\n    return immediate;\n  }\n\n  function getReference(dropTarget, target, x, y) {\n    var horizontal = o.direction === 'horizontal';\n    var reference = target !== dropTarget ? inside() : outside();\n    return reference;\n\n    function outside() {\n      // slower, but able to figure out any position\n      var len = dropTarget.children.length;\n      var i;\n      var el;\n      var rect;\n\n      for (i = 0; i < len; i++) {\n        el = dropTarget.children[i];\n        rect = el.getBoundingClientRect();\n\n        if (horizontal && rect.left + rect.width / 2 > x) {\n          return el;\n        }\n\n        if (!horizontal && rect.top + rect.height / 2 > y) {\n          return el;\n        }\n      }\n\n      return null;\n    }\n\n    function inside() {\n      // faster, but only available if dropped inside a child element\n      var rect = target.getBoundingClientRect();\n\n      if (horizontal) {\n        return resolve(x > rect.left + getRectWidth(rect) / 2);\n      }\n\n      return resolve(y > rect.top + getRectHeight(rect) / 2);\n    }\n\n    function resolve(after) {\n      return after ? nextEl(target) : target;\n    }\n  }\n\n  function isCopy(item, container) {\n    return typeof o.copy === 'boolean' ? o.copy : o.copy(item, container);\n  }\n}\n\nfunction touchy(el, op, type, fn) {\n  var touch = {\n    mouseup: 'touchend',\n    mousedown: 'touchstart',\n    mousemove: 'touchmove'\n  };\n  var pointers = {\n    mouseup: 'pointerup',\n    mousedown: 'pointerdown',\n    mousemove: 'pointermove'\n  };\n  var microsoft = {\n    mouseup: 'MSPointerUp',\n    mousedown: 'MSPointerDown',\n    mousemove: 'MSPointerMove'\n  };\n\n  if (global.navigator.pointerEnabled) {\n    crossvent[op](el, pointers[type], fn);\n  } else if (global.navigator.msPointerEnabled) {\n    crossvent[op](el, microsoft[type], fn);\n  } else {\n    crossvent[op](el, touch[type], fn);\n    crossvent[op](el, type, fn);\n  }\n}\n\nfunction whichMouseButton(e) {\n  if (e.touches !== void 0) {\n    return e.touches.length;\n  }\n\n  if (e.which !== void 0 && e.which !== 0) {\n    return e.which;\n  } // see https://github.com/bevacqua/dragula/issues/261\n\n\n  if (e.buttons !== void 0) {\n    return e.buttons;\n  }\n\n  var button = e.button;\n\n  if (button !== void 0) {\n    // see https://github.com/jquery/jquery/blob/99e8ff1baa7ae341e94bb89c3e84570c7c3ad9ea/src/event.js#L573-L575\n    return button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n}\n\nfunction getOffset(el) {\n  var rect = el.getBoundingClientRect();\n  return {\n    left: rect.left + getScroll('scrollLeft', 'pageXOffset'),\n    top: rect.top + getScroll('scrollTop', 'pageYOffset')\n  };\n}\n\nfunction getScroll(scrollProp, offsetProp) {\n  if (typeof global[offsetProp] !== 'undefined') {\n    return global[offsetProp];\n  }\n\n  if (documentElement.clientHeight) {\n    return documentElement[scrollProp];\n  }\n\n  return doc.body[scrollProp];\n}\n\nfunction getElementBehindPoint(point, x, y) {\n  point = point || {};\n  var state = point.className || '';\n  var el;\n  point.className += ' gu-hide';\n  el = doc.elementFromPoint(x, y);\n  point.className = state;\n  return el;\n}\n\nfunction never() {\n  return false;\n}\n\nfunction always() {\n  return true;\n}\n\nfunction getRectWidth(rect) {\n  return rect.width || rect.right - rect.left;\n}\n\nfunction getRectHeight(rect) {\n  return rect.height || rect.bottom - rect.top;\n}\n\nfunction getParent(el) {\n  return el.parentNode === doc ? null : el.parentNode;\n}\n\nfunction isInput(el) {\n  return el.tagName === 'INPUT' || el.tagName === 'TEXTAREA' || el.tagName === 'SELECT' || isEditable(el);\n}\n\nfunction isEditable(el) {\n  if (!el) {\n    return false;\n  } // no parents were editable\n\n\n  if (el.contentEditable === 'false') {\n    return false;\n  } // stop the lookup\n\n\n  if (el.contentEditable === 'true') {\n    return true;\n  } // found a contentEditable element in the chain\n\n\n  return isEditable(getParent(el)); // contentEditable is set to 'inherit'\n}\n\nfunction nextEl(el) {\n  return el.nextElementSibling || manually();\n\n  function manually() {\n    var sibling = el;\n\n    do {\n      sibling = sibling.nextSibling;\n    } while (sibling && sibling.nodeType !== 1);\n\n    return sibling;\n  }\n}\n\nfunction getEventHost(e) {\n  // on touchend event, we have to use `e.changedTouches`\n  // see http://stackoverflow.com/questions/7192563/touchend-event-properties\n  // see https://github.com/bevacqua/dragula/issues/34\n  if (e.targetTouches && e.targetTouches.length) {\n    return e.targetTouches[0];\n  }\n\n  if (e.changedTouches && e.changedTouches.length) {\n    return e.changedTouches[0];\n  }\n\n  return e;\n}\n\nfunction getCoord(coord, e) {\n  var host = getEventHost(e);\n  var missMap = {\n    pageX: 'clientX',\n    // IE8\n    pageY: 'clientY' // IE8\n\n  };\n\n  if (coord in missMap && !(coord in host) && missMap[coord] in host) {\n    coord = missMap[coord];\n  }\n\n  return host[coord];\n}\n\nmodule.exports = dragula;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad/./node_modules/dragula/dragula.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};\n\n//# sourceURL=webpack://pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad/./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n  \"use strict\";\n\n  if (global.setImmediate) {\n    return;\n  }\n\n  var nextHandle = 1; // Spec says greater than zero\n\n  var tasksByHandle = {};\n  var currentlyRunningATask = false;\n  var doc = global.document;\n  var registerImmediate;\n\n  function setImmediate(callback) {\n    // Callback can either be a function or a string\n    if (typeof callback !== \"function\") {\n      callback = new Function(\"\" + callback);\n    } // Copy function arguments\n\n\n    var args = new Array(arguments.length - 1);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 1];\n    } // Store and register the task\n\n\n    var task = {\n      callback: callback,\n      args: args\n    };\n    tasksByHandle[nextHandle] = task;\n    registerImmediate(nextHandle);\n    return nextHandle++;\n  }\n\n  function clearImmediate(handle) {\n    delete tasksByHandle[handle];\n  }\n\n  function run(task) {\n    var callback = task.callback;\n    var args = task.args;\n\n    switch (args.length) {\n      case 0:\n        callback();\n        break;\n\n      case 1:\n        callback(args[0]);\n        break;\n\n      case 2:\n        callback(args[0], args[1]);\n        break;\n\n      case 3:\n        callback(args[0], args[1], args[2]);\n        break;\n\n      default:\n        callback.apply(undefined, args);\n        break;\n    }\n  }\n\n  function runIfPresent(handle) {\n    // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n    // So if we're currently running a task, we'll need to delay this invocation.\n    if (currentlyRunningATask) {\n      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n      // \"too much recursion\" error.\n      setTimeout(runIfPresent, 0, handle);\n    } else {\n      var task = tasksByHandle[handle];\n\n      if (task) {\n        currentlyRunningATask = true;\n\n        try {\n          run(task);\n        } finally {\n          clearImmediate(handle);\n          currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n\n  function installNextTickImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      process.nextTick(function () {\n        runIfPresent(handle);\n      });\n    };\n  }\n\n  function canUsePostMessage() {\n    // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n    // where `global.postMessage` means something completely different and can't be used for this purpose.\n    if (global.postMessage && !global.importScripts) {\n      var postMessageIsAsynchronous = true;\n      var oldOnMessage = global.onmessage;\n\n      global.onmessage = function () {\n        postMessageIsAsynchronous = false;\n      };\n\n      global.postMessage(\"\", \"*\");\n      global.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n  }\n\n  function installPostMessageImplementation() {\n    // Installs an event handler on `global` for the `message` event: see\n    // * https://developer.mozilla.org/en/DOM/window.postMessage\n    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n    var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\n    var onGlobalMessage = function onGlobalMessage(event) {\n      if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n        runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n\n    if (global.addEventListener) {\n      global.addEventListener(\"message\", onGlobalMessage, false);\n    } else {\n      global.attachEvent(\"onmessage\", onGlobalMessage);\n    }\n\n    registerImmediate = function registerImmediate(handle) {\n      global.postMessage(messagePrefix + handle, \"*\");\n    };\n  }\n\n  function installMessageChannelImplementation() {\n    var channel = new MessageChannel();\n\n    channel.port1.onmessage = function (event) {\n      var handle = event.data;\n      runIfPresent(handle);\n    };\n\n    registerImmediate = function registerImmediate(handle) {\n      channel.port2.postMessage(handle);\n    };\n  }\n\n  function installReadyStateChangeImplementation() {\n    var html = doc.documentElement;\n\n    registerImmediate = function registerImmediate(handle) {\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var script = doc.createElement(\"script\");\n\n      script.onreadystatechange = function () {\n        runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n\n      html.appendChild(script);\n    };\n  }\n\n  function installSetTimeoutImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      setTimeout(runIfPresent, 0, handle);\n    };\n  } // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\n\n  var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n  attachTo = attachTo && attachTo.setTimeout ? attachTo : global; // Don't get fooled by e.g. browserify environments.\n\n  if ({}.toString.call(global.process) === \"[object process]\") {\n    // For Node.js before 0.9\n    installNextTickImplementation();\n  } else if (canUsePostMessage()) {\n    // For non-IE10 modern browsers\n    installPostMessageImplementation();\n  } else if (global.MessageChannel) {\n    // For web workers, where supported\n    installMessageChannelImplementation();\n  } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n    // For IE 6–8\n    installReadyStateChangeImplementation();\n  } else {\n    // For older browsers\n    installSetTimeoutImplementation();\n  }\n\n  attachTo.setImmediate = setImmediate;\n  attachTo.clearImmediate = clearImmediate;\n})(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad/./node_modules/setimmediate/setImmediate.js?");

/***/ }),

/***/ "./node_modules/ticky/ticky-browser.js":
/*!*********************************************!*\
  !*** ./node_modules/ticky/ticky-browser.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(setImmediate) {var si = typeof setImmediate === 'function',\n    tick;\n\nif (si) {\n  tick = function tick(fn) {\n    setImmediate(fn);\n  };\n} else {\n  tick = function tick(fn) {\n    setTimeout(fn, 0);\n  };\n}\n\nmodule.exports = tick;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate))\n\n//# sourceURL=webpack://pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad/./node_modules/ticky/ticky-browser.js?");

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = typeof global !== \"undefined\" && global || typeof self !== \"undefined\" && self || window;\nvar apply = Function.prototype.apply; // DOM APIs, for completeness\n\nexports.setTimeout = function () {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\n\nexports.setInterval = function () {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\n\nexports.clearTimeout = exports.clearInterval = function (timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\n\nTimeout.prototype.unref = Timeout.prototype.ref = function () {};\n\nTimeout.prototype.close = function () {\n  this._clearFn.call(scope, this._id);\n}; // Does not start the time, just sets up the members needed.\n\n\nexports.enroll = function (item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  var msecs = item._idleTimeout;\n\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout) item._onTimeout();\n    }, msecs);\n  }\n}; // setimmediate attaches itself to the global object\n\n\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\"); // On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\n\n\nexports.setImmediate = typeof self !== \"undefined\" && self.setImmediate || typeof global !== \"undefined\" && global.setImmediate || this && this.setImmediate;\nexports.clearImmediate = typeof self !== \"undefined\" && self.clearImmediate || typeof global !== \"undefined\" && global.clearImmediate || this && this.clearImmediate;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad/./node_modules/timers-browserify/main.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;\n\n//# sourceURL=webpack://pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad/(webpack)/buildin/global.js?");

/***/ })

/******/ });
if (window.ComponentFramework && window.ComponentFramework.registerControl) {
	ComponentFramework.registerControl('canvasdnd.canvasdnd', pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad.canvasdnd);
} else {
	var canvasdnd = canvasdnd || {};
	canvasdnd.canvasdnd = pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad.canvasdnd;
	pcf_tools_652ac3f36e1e4bca82eb3c1dc44e6fad = undefined;
}